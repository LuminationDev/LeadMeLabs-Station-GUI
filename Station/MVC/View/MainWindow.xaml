<Window x:Class="Station.MVC.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:bh="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:core="clr-namespace:Station.Core"
        xmlns:viewModel="clr-namespace:Station.MVC.ViewModel"
        xmlns:extensions="clr-namespace:Station.Extensions"
        mc:Ignorable="d"
        Width="{Binding WindowWidth, Mode=TwoWay}"
        Height="{Binding WindowHeight, Mode=TwoWay}"
        ShowInTaskbar="{Binding ShowInTaskbar}"
        WindowStartupLocation="Manual"
        WindowState="{Binding WindowState}"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="True"
        MouseLeftButtonDown="Window_MouseLeftButtonDown">
    
    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>
    
    <Border Background="#2d3436"
            CornerRadius="{Binding WindowRadius}">
        
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="75"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <core:NotifyIconWrapper NotifyRequest="{Binding NotifyRequest}">
                <bh:Interaction.Triggers>
                    <bh:EventTrigger EventName="OpenSelected">
                        <bh:InvokeCommandAction Command="{Binding NotifyIconOpenCommand}"/>
                    </bh:EventTrigger>
                    <bh:EventTrigger EventName="ExitSelected">
                        <bh:InvokeCommandAction Command="{Binding NotifyIconExitCommand}"/>
                    </bh:EventTrigger>
                </bh:Interaction.Triggers>
            </core:NotifyIconWrapper>
            
            <!--Window Action Panel-->
            <Border Grid.Row="0" Grid.Column="1"
                    Background="#2d3436" 
                    CornerRadius="{Binding WindowRadius, Mode=TwoWay}"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch">
                
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
                                <Setter Property="Clip" Value="{x:Null}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WindowState}" Value="Normal">
                                <Setter Property="Clip">
                                    <Setter.Value>
                                        <RectangleGeometry RadiusX="10" RadiusY="10" Rect="-10,0,710,60"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            
                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <DockPanel.Background>
                        <SolidColorBrush Color="#576574" Opacity="0.2"/>
                    </DockPanel.Background>
                    
                    <WrapPanel HorizontalAlignment="Right">
                        <extensions:ImageButton 
                            Width="30"
                           Margin="0, 5, 15, 0"
                           Style="{StaticResource ActionButtonTheme}"
                           ImageSource="pack://application:,,,/Assets/Icons/action_maximise.png"
                           HoverImageSource="pack://application:,,,/Assets/Icons/action_maximise_hovered.png"
                           Command="{Binding ResizeCommand}"/>
                        
                        <extensions:ImageButton
                            Width="30"
                            FontSize="22"
                            Margin="0, 5, 10, 0"
                            Style="{StaticResource ActionButtonTheme}"
                            ImageSource="pack://application:,,,/Assets/Icons/action_close.png"
                            HoverImageSource="pack://application:,,,/Assets/Icons/action_close_hovered.png"
                            Command="{Binding ClosingCommand}"/>
                    </WrapPanel>
                </DockPanel>
            </Border>
            
            <!--Logo-->
            <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Background="#2d3436" CornerRadius="10">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
                                <Setter Property="Clip" Value="{x:Null}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WindowState}" Value="Normal">
                                <Setter Property="Clip">
                                    <Setter.Value>
                                        <RectangleGeometry RadiusX="10" RadiusY="10" Rect="0,0,210,175"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                
                <DockPanel>
                    <DockPanel.Background>
                        <SolidColorBrush Color="#576574" Opacity="0.2"/>
                    </DockPanel.Background>
                    
                    <TextBlock Text="{Binding Id}"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Foreground="White"
                               FontSize="35"
                               FontFamily="Fonts/#Poppins"
                               Margin="10, 0, 0, 0"/>
                </DockPanel>
            </Border>
            
            <!--Menu Panel-->
            <Border Grid.Row="2" Grid.Column="0" 
                    Background="#2d3436" CornerRadius="10">
                
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WindowState}" Value="Maximized">
                                <Setter Property="Clip" Value="{x:Null}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WindowState}" Value="Normal">
                                <Setter Property="Clip">
                                    <Setter.Value>
                                        <RectangleGeometry RadiusX="10" RadiusY="10" Rect="0,-10,210,495"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                
                <DockPanel LastChildFill="False">
                    
                    <DockPanel.Background>
                        <SolidColorBrush Color="#576574" Opacity="0.2"/>
                    </DockPanel.Background>
                    
                    <StackPanel DockPanel.Dock="Top">
                        
                        <RadioButton Content="Home"
                                     Height="50"
                                     Foreground="White"
                                     FontSize="14"
                                     Style="{StaticResource MenuButtonTheme}"
                                     IsChecked="True"
                                     Command="{Binding HomeViewCommand}"/>
                        
                        <RadioButton Content="Console"
                                     Height="50"
                                     Foreground="White"
                                     FontSize="14"
                                     Style="{StaticResource MenuButtonTheme}"
                                     Command="{Binding ConsoleViewCommand}"/>
                        
                        <RadioButton Content="Experiences"
                                     Height="50"
                                     Foreground="White"
                                     FontSize="14"
                                     Style="{StaticResource MenuButtonTheme}"
                                     Command="{Binding ExperiencesViewCommand}"/>
                        
                        <RadioButton Content="Debug"
                                     Height="50"
                                     Foreground="White"
                                     FontSize="14"
                                     Style="{StaticResource MenuButtonTheme}"
                                     Command="{Binding DebugViewCommand}"/>
                        
                        <RadioButton Content="Logs"
                                     Height="50"
                                     Foreground="White"
                                     FontSize="14"
                                     Style="{StaticResource MenuButtonTheme}"
                                     Command="{Binding LogsViewCommand}"/>
                        
                        <RadioButton Content="QA"
                                     Height="50"
                                     Foreground="White"
                                     FontSize="14"
                                     Style="{StaticResource MenuButtonTheme}"
                                     Command="{Binding QaViewCommand}"/>
                        
                    </StackPanel>
                    
                    <!--Action Buttons-->
                    <DockPanel DockPanel.Dock="Bottom"
                                HorizontalAlignment="Stretch"
                                Height="75">
                        
                        <!-- Control buttons to wake up/turn off/restart the computer -->
                        <Button Command="{Binding PowerCommand}"
                                HorizontalAlignment="Left"
                                Cursor="Hand"
                                ToolTip="Power On/Off the NUC"
                                Margin="20, 0, 0, 0">

                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Width="50" Height="50">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Setters>
                                                    <Setter Property="CornerRadius" Value="50"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Background" Value="Green"/>
                                                </Style.Setters>

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Status}" Value="Off">
                                                        <Setter Property="Background" Value="PaleVioletRed"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Status}" Value="On">
                                                        <Setter Property="Background" Value="Green"/>
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Status}" Value="Off"/>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="Green"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Status}" Value="On"/>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="PaleVioletRed"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Cursor" Value="Hand"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Image Source="../../Assets/Icons/power_software.png" Width="50" Height="50"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        
                        <Button Command="{Binding RestartCommand}"
                                HorizontalAlignment="Right"
                                Cursor="Hand"
                                ToolTip="Restart the NUC"
                                Margin="0, 0, 20, 0">
                            
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Width="50" Height="50">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Setters>
                                                    <Setter Property="CornerRadius" Value="50"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Background" Value="LightCyan"/>
                                                </Style.Setters>

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Status}" Value="Off">
                                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Status}" Value="On">
                                                        <Setter Property="Background" Value="LightSkyBlue"/>
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Status}" Value="Off"/>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="LightCyan"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Status}" Value="On"/>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="LightCyan"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Image Source="../../Assets/Icons/power_restart.png" Width="50" Height="50"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </DockPanel>
                    
                </DockPanel>
            </Border>
            
            <!--View Area-->
            <ContentControl Grid.Row="1" Grid.RowSpan="2" Grid.Column="1"
                            Margin="10"
                            Content="{Binding CurrentView}"/>
        </Grid>
    </Border>
    
    <bh:Interaction.Triggers>
        <bh:EventTrigger EventName="Loaded">
            <bh:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </bh:EventTrigger>
    </bh:Interaction.Triggers>
</Window>
